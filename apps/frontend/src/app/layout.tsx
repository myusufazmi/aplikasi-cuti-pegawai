import type { Metadata } from "next";
import localFont from "next/font/local";
import { MantineProvider } from "@mantine/core";
import { cookies } from "next/headers";
import { Notifications } from "@mantine/notifications";
import '@mantine/core/styles.css';
import '@mantine/notifications/styles.css';

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  general,
  guarded
}: Readonly<{
  guarded: React.ReactNode;
  general: React.ReactNode;
}>) {
  const cookieStore = await cookies();
  const userId = cookieStore.get('userId')?.value;
  let admin

  if (userId) {
    const fetchAdmin = await fetch(`http://localhost:4000/admin/${userId}`)
    if (fetchAdmin.ok) {
      admin = await fetchAdmin.json()
    }
  }

  return (
    <html lang="en">
      <body className={`${geistSans.variable} ${geistMono.variable}`}>

        <MantineProvider>
          <Notifications />
          {!admin ? general : guarded}
        </MantineProvider>
      </body>
    </html>
  );
}
